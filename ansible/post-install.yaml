- name: Post installation steps
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: Install packages
      become: yes
      package:
        name:
          - btop
          - stow
          - git
          - zoxide
          - fzf
          - ripgrep
          - thefuck
          - podman-docker
          - hyprland
          - rofi
          - waybar
          - dbus-devel
          - dunst
        state: present
    - name: Install rustup
      shell: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source ~/.cargo/env
      args:
        creates: ~/.cargo/bin/rustup
        executable: /bin/bash
    - name: Install Go
      become: yes
      shell: |
        GO_VERSION=$(curl -s https://go.dev/VERSION?m=text | head -n1)
        wget -O /tmp/go.tar.gz "https://go.dev/dl/${GO_VERSION}.linux-amd64.tar.gz"
        rm -rf /usr/local/go
        tar -C /usr/local -xzf /tmp/go.tar.gz
        rm /tmp/go.tar.gz
      args:
        creates: /usr/local/go/bin/go
    - name: Check if rust packages are installed
      stat:
        path: "{{ item }}"
      register: rust_tools
      loop:
        - ~/.cargo/bin/eza
        - ~/.cargo/bin/starship
        - ~/.cargo/bin/zellij
        - ~/.cargo/bin/bluetui
        - ~/.cargo/bin/impala
    - name: Install rust-based packages
      shell: |
        source ~/.cargo/env
        cargo install eza starship zellij bluetui impala
      args:
        executable: /bin/bash
      when: rust_tools.results | selectattr('stat.exists', 'equalto', false) | list | length > 0
    - name: Install .NET 9
      shell: |
        curl -L https://dot.net/v1/dotnet-install.sh -o /tmp/dotnet-install.sh
        chmod +x /tmp/dotnet-install.sh
        /tmp/dotnet-install.sh --channel 9.0
        rm /tmp/dotnet-install.sh
      args:
        creates: ~/.dotnet/dotnet
        executable: /bin/bash
    - name: Install JetBrains Rider
      become: yes
      shell: |
        RIDER_VERSION=$(curl -s "https://data.services.jetbrains.com/products/releases?code=RD&latest=true&type=release" | grep -Po '"version":"\K[^"]+' | head -n1)
        wget -O /tmp/rider.tar.gz "https://download.jetbrains.com/rider/JetBrains.Rider-${RIDER_VERSION}.tar.gz"
        mkdir -p /opt/rider
        tar -C /opt/rider -xzf /tmp/rider.tar.gz --strip-components=1
        rm /tmp/rider.tar.gz
        ln -sf /opt/rider/bin/rider /usr/local/bin/rider
      args:
        creates: /opt/rider
        executable: /bin/bash
    - name: Install IntelliJ IDEA Ultimate
      become: yes
      shell: |
        IDEA_VERSION=$(curl -s "https://data.services.jetbrains.com/products/releases?code=IIU&latest=true&type=release" | grep -Po '"version":"\K[^"]+' | head -n1)
        wget -O /tmp/idea.tar.gz "https://download.jetbrains.com/idea/ideaIU-${IDEA_VERSION}.tar.gz"
        mkdir -p /opt/idea
        tar -C /opt/idea -xzf /tmp/idea.tar.gz --strip-components=1
        rm /tmp/idea.tar.gz
        ln -sf /opt/idea/bin/idea /usr/local/bin/idea
      args:
        creates: /opt/idea
        executable: /bin/bash
    - name: Install JetBrains RustRover
      become: yes
      shell: |
        RUSTROVER_VERSION=$(curl -s "https://data.services.jetbrains.com/products/releases?code=RR&latest=true&type=release" | grep -Po '"version":"\K[^"]+' | head -n1)
        wget -O /tmp/rustrover.tar.gz "https://download.jetbrains.com/rustrover/RustRover-${RUSTROVER_VERSION}.tar.gz"
        mkdir -p /opt/rustrover
        tar -C /opt/rustrover -xzf /tmp/rustrover.tar.gz --strip-components=1
        rm /tmp/rustrover.tar.gz
        ln -sf /opt/rustrover/bin/rustrover /usr/local/bin/rustrover
      args:
        creates: /opt/rustrover
        executable: /bin/bash
    - name: Install Visual Studio Code
      become: yes
      shell: |
        rpm --import https://packages.microsoft.com/keys/microsoft.asc
        echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo
        dnf install -y code
      args:
        creates: /usr/bin/code
        executable: /bin/bash
    - name: Install Brave Browser
      become: yes
      shell: |
        dnf install -y dnf-plugins-core
        dnf config-manager --add-repo https://brave-browser-rpm-release.s3.brave.com/brave-browser.repo
        rpm --import https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
        dnf install -y brave-browser
      args:
        creates: /usr/bin/brave-browser
        executable: /bin/bash
    - name: Install SDK Manager
      shell: |
        curl -s "https://get.sdkman.io" | bash
      args:
        creates: ~/.sdkman/bin/sdkman-init.sh
        executable: /bin/bash
    - name: Install Proton Pass
      become: yes
      shell: |
        wget -O /tmp/protonpass.rpm "https://proton.me/download/PassDesktop/linux/x64/ProtonPass.rpm"
        dnf install -y /tmp/protonpass.rpm
        rm /tmp/protonpass.rpm
      args:
        creates: /usr/bin/proton-pass
        executable: /bin/bash
    - name: Install Proton Mail
      become: yes
      shell: |
        wget -O /tmp/protonmail.rpm "https://proton.me/download/mail/linux/x64/ProtonMail.rpm"
        dnf install -y /tmp/protonmail.rpm
        rm /tmp/protonmail.rpm
      args:
        creates: /usr/bin/proton-mail
        executable: /bin/bash
    - name: Create desktop entry for IntelliJ IDEA
      become: yes
      copy:
        dest: /usr/share/applications/jetbrains-idea.desktop
        content: |
          [Desktop Entry]
          Version=1.0
          Type=Application
          Name=IntelliJ IDEA Ultimate
          Icon=/opt/idea/bin/idea.svg
          Exec=/opt/idea/bin/idea %f
          Comment=Capable and Ergonomic IDE for JVM
          Categories=Development;IDE;
          Terminal=false
          StartupWMClass=jetbrains-idea
          StartupNotify=true
    - name: Create desktop entry for Rider
      become: yes
      copy:
        dest: /usr/share/applications/jetbrains-rider.desktop
        content: |
          [Desktop Entry]
          Version=1.0
          Type=Application
          Name=Rider
          Icon=/opt/rider/bin/rider.svg
          Exec=/opt/rider/bin/rider %f
          Comment=Fast & powerful cross-platform .NET IDE
          Categories=Development;IDE;
          Terminal=false
          StartupWMClass=jetbrains-rider
          StartupNotify=true
    - name: Create desktop entry for RustRover
      become: yes
      copy:
        dest: /usr/share/applications/jetbrains-rustrover.desktop
        content: |
          [Desktop Entry]
          Version=1.0
          Type=Application
          Name=RustRover
          Icon=/opt/rustrover/bin/rustrover.svg
          Exec=/opt/rustrover/bin/rustrover %f
          Comment=Rust IDE by JetBrains
          Categories=Development;IDE;
          Terminal=false
          StartupWMClass=jetbrains-rustrover
          StartupNotify=true
